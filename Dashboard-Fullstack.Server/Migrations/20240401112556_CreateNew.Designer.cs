// <auto-generated />
using System;
using AngularAuthAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dashboard_Fullstack.Server.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240401112556_CreateNew")]
    partial class CreateNew
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AngularAuthAPI.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WidgetID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Dashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dashboards");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Headers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Labels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Datas");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.DataSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DataId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("DataSeries");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DataId")
                        .HasColumnType("int");

                    b.Property<int>("ElementType")
                        .HasColumnType("int");

                    b.Property<bool>("Private")
                        .HasColumnType("bit");

                    b.Property<int?>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.HasIndex("WidgetId");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Row", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DataId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataId");

                    b.ToTable("Row");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Widget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DashboardId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DashboardId");

                    b.ToTable("Widgets");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.DataSeries", b =>
                {
                    b.HasOne("Dashboard_Fullstack.Server.Models.Data", null)
                        .WithMany("Series")
                        .HasForeignKey("DataId");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Element", b =>
                {
                    b.HasOne("Dashboard_Fullstack.Server.Models.Data", "Data")
                        .WithMany()
                        .HasForeignKey("DataId");

                    b.HasOne("Dashboard_Fullstack.Server.Models.Widget", null)
                        .WithMany("Elements")
                        .HasForeignKey("WidgetId");

                    b.Navigation("Data");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Row", b =>
                {
                    b.HasOne("Dashboard_Fullstack.Server.Models.Data", null)
                        .WithMany("Rows")
                        .HasForeignKey("DataId");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Widget", b =>
                {
                    b.HasOne("Dashboard_Fullstack.Server.Models.Dashboard", null)
                        .WithMany("Widgets")
                        .HasForeignKey("DashboardId");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Dashboard", b =>
                {
                    b.Navigation("Widgets");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Data", b =>
                {
                    b.Navigation("Rows");

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Dashboard_Fullstack.Server.Models.Widget", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
